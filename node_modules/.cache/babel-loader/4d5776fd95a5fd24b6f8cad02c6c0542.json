{"ast":null,"code":"import _objectSpread from\"D:/Desktop/PersonalProjects/my-website-react/my-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/Desktop/PersonalProjects/my-website-react/my-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Desktop/PersonalProjects/my-website-react/my-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Desktop/PersonalProjects/my-website-react/my-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Desktop/PersonalProjects/my-website-react/my-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import SectionTitle from'../section_title/section_title';import'./projects.css';import Thumbnail from'./thumbnail/thumbnail';// Thumbnails\nimport SortingVisualizerGif from'../../assets/thumbnails/sorting-gif.gif';import BirdsHateBombsGif from'../../assets/thumbnails/bhb-gif.gif';import GlassesVisualizerGif from'../../assets/thumbnails/glasses-vis-gif.gif';import GeneticAlgorithmsGif from'../../assets/thumbnails/drone-ga-gif.gif';import SimpleLinearRegressionGif from'../../assets/thumbnails/stats-project-gif.gif';import QuadraticSieveGif from'../../assets/thumbnails/qs-gif.gif';import TourGuideRobotGif from'../../assets/thumbnails/tour-guide-robot-gif.gif';import MazetrixGif from'../../assets/thumbnails/mazetrix-gif.gif';import AntiHateSpeechGif from'../../assets/thumbnails/anti-hate-speech-gif.gif';import SupervisedLearningGif from'../../assets/thumbnails/supervised-learning-gif.gif';// Documents\nimport HonorsThesisDocument from'../../assets/documents/HonorsThesis.pdf';import QSPresentationDocument from'../../assets/documents/QSPresentation.pdf';import TourGuideRobotDocument from'../../assets/documents/RoboticsPoster.pdf';import SupervisedLearningDocument from'../../assets/documents/SLReport.pdf';var sortingVisualizer={name:'Sorting Algorithm Visualizer using Randomized Images',description:\"This is a tool used to help visualize various sorting algorithms \\\r\n    ranging from bubblesort to quicksort. It takes an image as input, randomizes \\\r\n    the pixel columns of the image, then resorts it back to the original form. \\\r\n    A video showing the internal process of the sorting algorithm is then output \\\r\n    at the end.\",gif:SortingVisualizerGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/sorting-randomized-images'}]};var birdsHateBombs={name:'Birds Hate Bombs',description:\"This is an infinite runner game made using the Unity game engine \\\r\n    where the player controls a flying bird while collecting gems and avoiding \\\r\n    levitating bombs. This was also my submission to the 2019 \\\r\n    Game Jam hosted by the University of Oklahoma Game Developer's Association.\",gif:BirdsHateBombsGif,icons:['fab fa-unity'],links:[{name:'View Source',href:'https://github.com/stinsan/birds-hate-bombs'},{name:'Play Game',href:'https://simmer.io/@Stinsan/birds-hate-bombs'}]};var glassesVisualizer={name:'Glasses Visualizer',description:\"This is a program designed to simulate levels of visual \\\r\n    acuity and colorblindness implemented using Python and Pygame. Features include \\\r\n    simulating nearsightedness, farsightedness, and three types of colorblindness \\\r\n    (tritanopia, protanopia, and total colorblindness). This was my final project \\\r\n    for my Computer Graphics course taken in Spring 2020.\",gif:GlassesVisualizerGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/glasses-visualizer'}]};var droneGeneticAlgorithms={name:'Genetic Algorithms with Simulated Drones',description:\"This project was an exercise on genetic algorithms for my \\\r\n    Artificial Intelligence course taken in Spring 2020. The evolutionary goal \\\r\n    was to create an agent that can collect as many points as possible in a set \\\r\n    period of time by navigating to different circles in the simulation. While \\\r\n    doing so, the drone must also avoid various static and dynamic obstacles to \\\r\n    prevent itself from taking any damage.\",gif:GeneticAlgorithmsGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/cs4013-drone'}]};var simpleLinearRegression={name:'An Application of Simple Linear Regression',description:\"This project is a statistical analysis of data I collected while playing the popular \\\r\n    video game Fortnite. More specifically, I used simple linear \\\r\n    regression to analyze the damage dealt to opponents versus the number of \\\r\n    eliminations per game in order to determine whether or not there was a linear \\\r\n    relationship between those two in-game statistics. I used R to perform the \\\r\n    statistical tests and to make my conclusion. This was my final project for my \\\r\n    Applied Statistics course taken in Spring 2019.\",gif:SimpleLinearRegressionGif,icons:['fab fa-r-project'],links:[{name:'View Document',href:'/assets/stats-project.html'}]};var quadraticSieve={name:'The Quadratic Sieve Integer Factorization Algorithm',description:\"This was my Honors Research project done in conjunction with \\\r\n    Dr. Qi Cheng from the University of Oklahoma. It is a Python command line \\\r\n    program of my own implementation of the quadratic sieve integer factorization \\\r\n    algorithm conceived by Carl Pomerance in 1981, which is able to find the \\\r\n    prime factors of a 21-digit number in less than 1 minute on my local machine.\",gif:QuadraticSieveGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/quadratic-sieve'},{name:'View Thesis',href:HonorsThesisDocument},{name:'View Presentation',href:QSPresentationDocument}]};var supervisedLearning={name:'Classifying Daily Activities Based on Inertial Sensor Data',description:\"This project was an exercise on supervised machine learning \\\r\n  methods done for my Machine Learning course taken in Fall 2020. The goal was \\\r\n  to create an effective model to classify various activities based on data \\\r\n  gathered from sensors attached to human subjects. To do so, I implemented several \\\r\n  machine learning algorithms, such as k-nearest neighbors, decision trees, and \\\r\n  one-versus-all, from scratch without using any machine learning libraries.\",gif:SupervisedLearningGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/daily-and-sports-activities-classifier'},{name:'View Paper',href:SupervisedLearningDocument}]};var tourGuideRobot={name:'A Simulated Tour Guide Robot',description:\"This was the final project for my Robotics course taken in Fall 2020. \\\r\n    It is a simulated tour guide robot designed to intelligently \\\r\n    guide visitors to various tour highlights. To do so, the robot plans the most \\\r\n    efficient tour path, avoids static and dynamic obstacles, and actively \\\r\n    localizes itself as it traverses the environment. A combination of ROS, \\\r\n    RViz, Gazebo, and Python were utilized to implement the simulation.\",gif:TourGuideRobotGif,icons:['fab fa-python'],links:[{name:'View Source',href:'https://github.com/stinsan/tour-guide-robot'},{name:'View Research Poster',href:TourGuideRobotDocument}]};var mazetrix={name:'Mazetrix',description:\"This was my team's submission to Hacklahoma 2020, a 24-hour \\\r\n  hackathon hosted by the University of Oklahoma. It is automatic maze generator \\\r\n  and solver created using HTML, CSS, and JavaScript. My role in the team was to \\\r\n  implement the backend graph data structures and to implement the maze generation \\\r\n  and path-finding algorithms.\",gif:MazetrixGif,icons:['fab fa-js-square','fab fa-html5','fab fa-css3-alt'],links:[{name:'View Source',href:'https://github.com/stinsan/mazetrix'},{name:'View Devpost',href:'https://devpost.com/software/hacklahoma2020-sze1p3'}]};var antiHateSpeech={name:'Anti-Hate Speech Google Chrome Plugin',description:\"This was my team's submission to Hacklahoma 2021, a 24-hour \\\r\n  hackathon hosted by the University of Oklahoma. This project is a Google Chrome \\\r\n  plugin that blocks Tweets classified as hate speech by an NLP model created \\\r\n  using spaCy. The plugin parses Tweets from the Twitter webpage and sends the \\\r\n  text to a Flask backend server containing the NLP model for classification. \\\r\n  If the Tweet is classified as hate speech, it is blocked from the user's view.\",gif:AntiHateSpeechGif,icons:['fab fa-python','fab fa-js-square'],links:[{name:'View Source',href:'https://github.com/nemercer/Hacklahoma21'},{name:'View Devpost',href:'https://devpost.com/software/anti-hate-speech-plugin'}]};var Projects=/*#__PURE__*/function(_React$Component){_inherits(Projects,_React$Component);var _super=_createSuper(Projects);function Projects(){_classCallCheck(this,Projects);return _super.apply(this,arguments);}_createClass(Projects,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"projects section-wrapper\",id:\"projects\",children:[/*#__PURE__*/_jsx(SectionTitle,{sectionName:\"projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projects-main-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"thumbnails-wrapper\",children:[/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},sortingVisualizer)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},birdsHateBombs)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},glassesVisualizer)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},droneGeneticAlgorithms)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},simpleLinearRegression)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},quadraticSieve)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},supervisedLearning)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},tourGuideRobot)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},mazetrix)),/*#__PURE__*/_jsx(Thumbnail,_objectSpread({className:\"thumbnail\"},antiHateSpeech))]})})]});}}]);return Projects;}(React.Component);export default Projects;","map":{"version":3,"sources":["D:/Desktop/PersonalProjects/my-website-react/my-website/src/components/projects/projects.js"],"names":["React","SectionTitle","Thumbnail","SortingVisualizerGif","BirdsHateBombsGif","GlassesVisualizerGif","GeneticAlgorithmsGif","SimpleLinearRegressionGif","QuadraticSieveGif","TourGuideRobotGif","MazetrixGif","AntiHateSpeechGif","SupervisedLearningGif","HonorsThesisDocument","QSPresentationDocument","TourGuideRobotDocument","SupervisedLearningDocument","sortingVisualizer","name","description","gif","icons","links","href","birdsHateBombs","glassesVisualizer","droneGeneticAlgorithms","simpleLinearRegression","quadraticSieve","supervisedLearning","tourGuideRobot","mazetrix","antiHateSpeech","Projects","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SectionTitle from '../section_title/section_title';\r\nimport './projects.css';\r\nimport Thumbnail from './thumbnail/thumbnail';\r\n\r\n// Thumbnails\r\nimport SortingVisualizerGif from '../../assets/thumbnails/sorting-gif.gif';\r\nimport BirdsHateBombsGif from '../../assets/thumbnails/bhb-gif.gif';\r\nimport GlassesVisualizerGif from '../../assets/thumbnails/glasses-vis-gif.gif';\r\nimport GeneticAlgorithmsGif from '../../assets/thumbnails/drone-ga-gif.gif';\r\nimport SimpleLinearRegressionGif from '../../assets/thumbnails/stats-project-gif.gif';\r\nimport QuadraticSieveGif from '../../assets/thumbnails/qs-gif.gif';\r\nimport TourGuideRobotGif from '../../assets/thumbnails/tour-guide-robot-gif.gif';\r\nimport MazetrixGif from '../../assets/thumbnails/mazetrix-gif.gif';\r\nimport AntiHateSpeechGif from '../../assets/thumbnails/anti-hate-speech-gif.gif';\r\nimport SupervisedLearningGif from '../../assets/thumbnails/supervised-learning-gif.gif';\r\n\r\n// Documents\r\nimport HonorsThesisDocument from '../../assets/documents/HonorsThesis.pdf';\r\nimport QSPresentationDocument from '../../assets/documents/QSPresentation.pdf';\r\nimport TourGuideRobotDocument from '../../assets/documents/RoboticsPoster.pdf';\r\nimport SupervisedLearningDocument from '../../assets/documents/SLReport.pdf';\r\n\r\nconst sortingVisualizer = {\r\n  name: 'Sorting Algorithm Visualizer using Randomized Images',\r\n  description: \"This is a tool used to help visualize various sorting algorithms \\\r\n    ranging from bubblesort to quicksort. It takes an image as input, randomizes \\\r\n    the pixel columns of the image, then resorts it back to the original form. \\\r\n    A video showing the internal process of the sorting algorithm is then output \\\r\n    at the end.\",\r\n  gif: SortingVisualizerGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/sorting-randomized-images',\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nconst birdsHateBombs = {\r\n  name: 'Birds Hate Bombs',\r\n  description: \"This is an infinite runner game made using the Unity game engine \\\r\n    where the player controls a flying bird while collecting gems and avoiding \\\r\n    levitating bombs. This was also my submission to the 2019 \\\r\n    Game Jam hosted by the University of Oklahoma Game Developer's Association.\",\r\n  gif: BirdsHateBombsGif,\r\n  icons: ['fab fa-unity'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/birds-hate-bombs',\r\n    },\r\n    {\r\n      name: 'Play Game',\r\n      href: 'https://simmer.io/@Stinsan/birds-hate-bombs',\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nconst glassesVisualizer = {\r\n  name: 'Glasses Visualizer',\r\n  description: \"This is a program designed to simulate levels of visual \\\r\n    acuity and colorblindness implemented using Python and Pygame. Features include \\\r\n    simulating nearsightedness, farsightedness, and three types of colorblindness \\\r\n    (tritanopia, protanopia, and total colorblindness). This was my final project \\\r\n    for my Computer Graphics course taken in Spring 2020.\",\r\n  gif: GlassesVisualizerGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/glasses-visualizer',\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nconst droneGeneticAlgorithms = {\r\n  name: 'Genetic Algorithms with Simulated Drones',\r\n  description: \"This project was an exercise on genetic algorithms for my \\\r\n    Artificial Intelligence course taken in Spring 2020. The evolutionary goal \\\r\n    was to create an agent that can collect as many points as possible in a set \\\r\n    period of time by navigating to different circles in the simulation. While \\\r\n    doing so, the drone must also avoid various static and dynamic obstacles to \\\r\n    prevent itself from taking any damage.\",\r\n  gif: GeneticAlgorithmsGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/cs4013-drone',\r\n    }\r\n  ]\r\n}\r\n\r\nconst simpleLinearRegression = {\r\n  name: 'An Application of Simple Linear Regression',\r\n  description: \"This project is a statistical analysis of data I collected while playing the popular \\\r\n    video game Fortnite. More specifically, I used simple linear \\\r\n    regression to analyze the damage dealt to opponents versus the number of \\\r\n    eliminations per game in order to determine whether or not there was a linear \\\r\n    relationship between those two in-game statistics. I used R to perform the \\\r\n    statistical tests and to make my conclusion. This was my final project for my \\\r\n    Applied Statistics course taken in Spring 2019.\",\r\n  gif: SimpleLinearRegressionGif,\r\n  icons: ['fab fa-r-project'],\r\n  links: [\r\n    {\r\n      name: 'View Document',\r\n      href: '/assets/stats-project.html',\r\n    }\r\n  ]\r\n}\r\n\r\nconst quadraticSieve = {\r\n  name: 'The Quadratic Sieve Integer Factorization Algorithm',\r\n  description: \"This was my Honors Research project done in conjunction with \\\r\n    Dr. Qi Cheng from the University of Oklahoma. It is a Python command line \\\r\n    program of my own implementation of the quadratic sieve integer factorization \\\r\n    algorithm conceived by Carl Pomerance in 1981, which is able to find the \\\r\n    prime factors of a 21-digit number in less than 1 minute on my local machine.\",\r\n  gif: QuadraticSieveGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/quadratic-sieve',\r\n    },\r\n    {\r\n      name: 'View Thesis',\r\n      href: HonorsThesisDocument\r\n    },\r\n    {\r\n      name: 'View Presentation',\r\n      href: QSPresentationDocument\r\n    }\r\n  ]\r\n}\r\n\r\nconst supervisedLearning = {\r\n  name: 'Classifying Daily Activities Based on Inertial Sensor Data',\r\n  description: \"This project was an exercise on supervised machine learning \\\r\n  methods done for my Machine Learning course taken in Fall 2020. The goal was \\\r\n  to create an effective model to classify various activities based on data \\\r\n  gathered from sensors attached to human subjects. To do so, I implemented several \\\r\n  machine learning algorithms, such as k-nearest neighbors, decision trees, and \\\r\n  one-versus-all, from scratch without using any machine learning libraries.\",\r\n  gif: SupervisedLearningGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/daily-and-sports-activities-classifier',\r\n    },\r\n    {\r\n      name: 'View Paper',\r\n      href: SupervisedLearningDocument\r\n    },\r\n  ]\r\n}\r\n\r\nconst tourGuideRobot = {\r\n  name: 'A Simulated Tour Guide Robot',\r\n  description: \"This was the final project for my Robotics course taken in Fall 2020. \\\r\n    It is a simulated tour guide robot designed to intelligently \\\r\n    guide visitors to various tour highlights. To do so, the robot plans the most \\\r\n    efficient tour path, avoids static and dynamic obstacles, and actively \\\r\n    localizes itself as it traverses the environment. A combination of ROS, \\\r\n    RViz, Gazebo, and Python were utilized to implement the simulation.\",\r\n  gif: TourGuideRobotGif,\r\n  icons: ['fab fa-python'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/tour-guide-robot',\r\n    },\r\n    {\r\n      name: 'View Research Poster',\r\n      href: TourGuideRobotDocument\r\n    },\r\n  ]\r\n}\r\n\r\nconst mazetrix = {\r\n  name: 'Mazetrix',\r\n  description: \"This was my team's submission to Hacklahoma 2020, a 24-hour \\\r\n  hackathon hosted by the University of Oklahoma. It is automatic maze generator \\\r\n  and solver created using HTML, CSS, and JavaScript. My role in the team was to \\\r\n  implement the backend graph data structures and to implement the maze generation \\\r\n  and path-finding algorithms.\",\r\n  gif: MazetrixGif,\r\n  icons: ['fab fa-js-square', 'fab fa-html5', 'fab fa-css3-alt'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/stinsan/mazetrix',\r\n    },\r\n    {\r\n      name: 'View Devpost',\r\n      href: 'https://devpost.com/software/hacklahoma2020-sze1p3'\r\n    },\r\n  ]\r\n}\r\n\r\nconst antiHateSpeech = {\r\n  name: 'Anti-Hate Speech Google Chrome Plugin',\r\n  description: \"This was my team's submission to Hacklahoma 2021, a 24-hour \\\r\n  hackathon hosted by the University of Oklahoma. This project is a Google Chrome \\\r\n  plugin that blocks Tweets classified as hate speech by an NLP model created \\\r\n  using spaCy. The plugin parses Tweets from the Twitter webpage and sends the \\\r\n  text to a Flask backend server containing the NLP model for classification. \\\r\n  If the Tweet is classified as hate speech, it is blocked from the user's view.\",\r\n  gif: AntiHateSpeechGif,\r\n  icons: ['fab fa-python', 'fab fa-js-square'],\r\n  links: [\r\n    {\r\n      name: 'View Source',\r\n      href: 'https://github.com/nemercer/Hacklahoma21',\r\n    },\r\n    {\r\n      name: 'View Devpost',\r\n      href: 'https://devpost.com/software/anti-hate-speech-plugin'\r\n    },\r\n  ]\r\n}\r\n\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='projects section-wrapper' id='projects'>\r\n        <SectionTitle sectionName='projects' />\r\n        <div className=\"projects-main-section\">\r\n          <div className=\"thumbnails-wrapper\">\r\n            <Thumbnail className=\"thumbnail\" {...sortingVisualizer} />\r\n            <Thumbnail className=\"thumbnail\" {...birdsHateBombs} />\r\n            <Thumbnail className=\"thumbnail\" {...glassesVisualizer} />\r\n            <Thumbnail className=\"thumbnail\" {...droneGeneticAlgorithms} />\r\n            <Thumbnail className=\"thumbnail\" {...simpleLinearRegression} />\r\n            <Thumbnail className=\"thumbnail\" {...quadraticSieve} />\r\n            <Thumbnail className=\"thumbnail\" {...supervisedLearning} />\r\n            <Thumbnail className=\"thumbnail\" {...tourGuideRobot} />\r\n            <Thumbnail className=\"thumbnail\" {...mazetrix} />\r\n            <Thumbnail className=\"thumbnail\" {...antiHateSpeech} />\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects\r\n"]},"metadata":{},"sourceType":"module"}