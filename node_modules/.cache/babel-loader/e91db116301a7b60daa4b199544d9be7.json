{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\PersonalProjects\\\\my-website-react\\\\my-website\\\\src\\\\components\\\\projects\\\\thumbnail\\\\thumbnail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nModal.setAppElement(\"#root\");\nexport default function Thumbnail(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleModal,\n      className: props.className,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"thumbnail-img\",\n        alt: \"alt\",\n        src: props.gifPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", props.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: toggleModal,\n      contentLabel: \"My dialog\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      closeTimeoutMS: 400,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\",\n          onClick: toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-icons\",\n          children: props.icons.map((value, index) => /*#__PURE__*/_jsxDEV(\"i\", {\n            className: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-description\",\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: props.links.map((link, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link.href,\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: link.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Thumbnail, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Thumbnail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thumbnail\");","map":{"version":3,"sources":["D:/Desktop/PersonalProjects/my-website-react/my-website/src/components/projects/thumbnail/thumbnail.js"],"names":["React","useState","Modal","setAppElement","Thumbnail","props","isOpen","setIsOpen","toggleModal","className","gifPath","name","icons","map","value","index","description","links","link","href"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEAA,KAAK,CAACC,aAAN,CAAoB,OAApB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASO,WAAT,GAAuB;AACrBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,sBACE;AAAA,4BACA;AAAK,MAAA,OAAO,EAAGE,WAAf;AAA6B,MAAA,SAAS,EAAGH,KAAK,CAACI,SAA/C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAC,KAAnC;AAAyC,QAAA,GAAG,EAAGJ,KAAK,CAACK;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wBAAKL,KAAK,CAACM,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA,QAAC,KAAD;AACE,MAAA,MAAM,EAAKL,MADb;AAEE,MAAA,cAAc,EAAKE,WAFrB;AAGE,MAAA,YAAY,EAAG,WAHjB;AAIE,MAAA,SAAS,EAAG,OAJd;AAKE,MAAA,gBAAgB,EAAG,SALrB;AAME,MAAA,cAAc,EAAK,GANrB;AAAA,8BAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BH,KAAK,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,cAAb;AAA4B,UAAA,OAAO,EAAGH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACIH,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBAAmB;AAAe,YAAA,SAAS,EAAED;AAA1B,aAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,kBAAnC;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBAAoCV,KAAK,CAACW;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACIX,KAAK,CAACY,KAAN,CAAYJ,GAAZ,CAAgB,CAACK,IAAD,EAAOH,KAAP,kBACf;AAAe,YAAA,IAAI,EAAEG,IAAI,CAACC,IAA1B;AAAgC,YAAA,MAAM,EAAC,QAAvC;AAAA,mCACC;AAAA,wBAAUD,IAAI,CAACP;AAAf;AAAA;AAAA;AAAA;AAAA;AADD,aAAQI,KAAR;AAAA;AAAA;AAAA;AAAA,kBADD;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AAkCD;;GAzCuBX,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function Thumbnail(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function toggleModal() {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <div onClick={ toggleModal } className={ props.className }>\r\n      <img className=\"thumbnail-img\" alt=\"alt\" src={ props.gifPath }></img>\r\n      <p> {props.name} </p>\r\n    </div>\r\n    <Modal\r\n      isOpen = { isOpen }\r\n      onRequestClose = { toggleModal }\r\n      contentLabel = \"My dialog\"\r\n      className = \"modal\"\r\n      overlayClassName = \"overlay\"\r\n      closeTimeoutMS = { 400 }\r\n    >\r\n      <div className=\"modal-header\">\r\n        <div className=\"modal-title\">{props.name}</div>\r\n        <i className=\"fas fa-times\" onClick={ toggleModal }></i>\r\n        <div className=\"modal-icons\">\r\n          { props.icons.map((value, index) => (<i key={index} className={value}></i>)) }\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n\r\n        <div className=\"modal-description\">{props.description}</div>\r\n        <div className=\"modal-buttons\">\r\n          { props.links.map((link, index) =>\r\n            (<a key={index} href={link.href} target=\"_blank\">\r\n              <button>{ link.name }</button>\r\n            </a>))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}